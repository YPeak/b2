<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--配置spring核心监听器默认会以/WEB-IINF/applicationContext.xml作为配置文件-->
    <!--<listener>-->
        <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
    <!--</listener>-->
    <!--&lt;!&ndash;ContextLoaderListener参数用来指定spring配置文件&ndash;&gt;-->
    <!--<context-param>-->
        <!--<param-name>contextConfigLocation</param-name>-->
        <!--<param-value>/WEB-INF/applicationContext*.xml</param-value>-->
    <!--</context-param>-->

    <servlet>
        <servlet-name>spring-mvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/springmvc-config.xml</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring-mvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--编码过滤器-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--静态资源访问配置，这样配置之后，才能访问这样后缀的静态资源  mvc不赞成直接访问页面-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.jpg</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.js</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.css</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.html</url-pattern>-->
    <!--</servlet-mapping>-->
    <!-- 配置加载log4j.xml文件路径 -->
    <!-- log4j配置，文件路径，因为是跟随项目启动 -->
    <!--<context-param>-->
        <!--<param-name>log4jConfigLocation</param-name>-->
        <!--<param-value>/WEB-INF/log4j2.xml</param-value>-->
    <!--</context-param>-->
    <!--&lt;!&ndash; 配置log4j.xml变量，如果需要动态的就使用下面方式，使用方法${name} &ndash;&gt;-->
    <!--<context-param>-->
        <!--<param-name>controller</param-name>-->
        <!--<param-value>controller-log</param-value>-->
    <!--</context-param>-->

    <!--<context-param>-->
        <!--<param-name>loggingLevel</param-name>-->
        <!--<param-value>info</param-value>-->
    <!--</context-param>-->
    <!--&lt;!&ndash; 加载log4j配置文件 &ndash;&gt;-->
    <!--<listener>-->
        <!--<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>-->
    <!--</listener>-->

</web-app>